import java.util.Scanner;

public class FIFOPageReplacement {

    public static void fifoPageReplacement() {
        Scanner sc = new Scanner(System.in);

        // Input number of pages
        System.out.print("Enter the number of pages you want to enter: ");
        int noOfPages = sc.nextInt();
        int[] pages = new int[noOfPages];

        System.out.println("Enter the page numbers:");
        for (int i = 0; i < noOfPages; i++) {
            pages[i] = sc.nextInt();
        }

        // Input capacity of the frame
        System.out.print("Enter the capacity of frame: ");
        int capacity = sc.nextInt();
        int[] frame = new int[capacity]; // Frame initialization
        for (int i = 0; i < capacity; i++) {
            frame[i] = -1; // Initialize frame with -1 (empty)
        }

        // Table to store the frame status at each step
        int[][] table = new int[noOfPages][capacity];
        int hit = 0, fault = 0, index = 0;

        System.out.println("\n----------------------------------------------------------------------");
        // FIFO page replacement algorithm simulation
        for (int i = 0; i < noOfPages; i++) {
            int search = -1;

            // Check if the page is already in the frame (hit)
            for (int j = 0; j < capacity; j++) {
                if (frame[j] == pages[i]) {
                    search = j;
                    hit++;
                    System.out.printf("%4s", "H");
                    break;
                }
            }

            // Page fault occurs if the page is not in the frame
            if (search == -1) {
                frame[index] = pages[i];
                fault++;
                System.out.printf("%4s", "F");
                index = (index + 1) % capacity; // Circular increment for frame
            }

            // Copy the current frame status to the table for display
            for (int k = 0; k < capacity; k++) {
                table[i][k] = frame[k];
            }
        }
        System.out.println("\n----------------------------------------------------------------------");

        // Display the page frame table
        for (int i = 0; i < capacity; i++) {
            for (int j = 0; j < noOfPages; j++) {
                System.out.printf("%3d ", table[j][i]);
            }
            System.out.println();
        }

        System.out.println("----------------------------------------------------------------------");

        // Calculate hit ratio and fault ratio
        double faultRatio = ((double) fault / noOfPages) * 100;
        double hitRatio = ((double) hit / noOfPages) * 100;

        System.out.println("Page Faults: " + fault);
        System.out.println("Page Hits: " + hit);
        System.out.printf("Hit Ratio: %.2f%%\n", hitRatio);
        System.out.printf("Fault Ratio: %.2f%%\n", faultRatio);

        sc.close();
    }

    public static void main(String[] args) {
        // Run FIFO page replacement function
        fifoPageReplacement();
    }
}
